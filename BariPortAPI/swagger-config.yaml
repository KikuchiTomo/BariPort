openapi: "3.0.0"
info:
  version: "0.0.1"
  title: "BariPort API"
  description: "BariPortのAPIです。"
servers:
  - url: "http://localhost:8080"
    description: "このURLはダミーのため、実際には使用しません。"
components:
  schemas:
    Hello:
      type: "object"
      properties:
        message:
          type: "string"
    Users:
      type: "object"
      properties:
        id:
          type: "string" # BEGIN: id type
        displayName:
          type: "string"
        apiKey:
          type: "string"
    Result:
      type: "object"
      properties:
        message: 
          type: "string"
    ChatRoomParticipants:
      type: "object"
      properties:
        id:
          type: "string" # BEGIN: id type
        userId:
          type: "string" # BEGIN: userId type
        chatRoomId:
          type: "string" # BEGIN: chatRoomId type
    ChatRooms:
      type: "object"
      properties:
        id:
          type: "string" # BEGIN: id type
        name:
          type: "string"
        type:
          type: "string" # BEGIN: type type
        projectId:
          type: "string" # BEGIN: projectId type
    MessagesGet:
      type: "object"
      properties:
        id:
          type: "string" # BEGIN: id type
        userId:
          type: "string" # BEGIN: userId type
        chatRoomId:
          type: "string" # BEGIN: chatRoomId type
        text:
          type: "string" # BEGIN: text type
    MessagesPost:
      type: "object"
      properties:
        id:
          type: "string"
        userId: 
          type: "string"
        companyId:
          type: "string"
        chatRoomId:
          type: "string"
        text: 
          type: "string"
        imgUrl:
          type: "string"
    Reviews:
      type: "object"
      properties:
        id:
          type: "string" # BEGIN: id type
        sendAt:
          type: "string"  
        imgUrl:
          type: "string"   
        companyName:
          type: "string"           
        evaluationScore:
          type: "integer"
        description:
          type: "string"           
    Company:
      type: "object"
      properties:
        id:
          type: "string" # BEGIN: id type
        name:
          type: "string"    
    Projects:
      type: "object"
      properties:
        companyName:
          type: "string" # BEGIN: id type        
        projectName:
          type: "string"
        description:
          type: "string"
        testUrl:
          type: "string"
        chatRoomId: 
          type: "string"
#security:
#  - identity_server_auth:
#    - api
paths:
  /projects/list:
    get:
      tags:
        - "V1"
      summary: "プロジェクト一覧取得"
      description: "プロジェクト一覧を取得します。"
      operationId: "getProjects"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Projects"
        "404":
          description: "プロジェクトが存在しません。"
        "500":
          description: "取得中に何らかのエラーが発生しました。"
  /chat_room_participants:
    post:
      tags:
        - "V1"
      summary: "チャットルーム参加登録"
      description: "チャットルームの参加を登録します。"
      operationId: "postChatRoomParticipants"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                id: 
                  type: "string"
                chatRoomId: 
                  type: "string"
                userId:
                  type: "string"                  
      responses:
        "201":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Result"
        "400":
          description: "userIdまたはchatRoomIdが渡されていないか、不正です。"
        "500":
          description: "登録中に何らかのエラーが発生しました。"
  /chat_room:
    get:
      tags:
        - "V1"
      summary: "チャットルーム情報取得"
      description: "チャットルーム情報を取得します。"
      operationId: "getChatRooms"
      parameters:
        - name: "projectId"
          in: "query"
          required: true
          schema:
            type: "string" # BEGIN: projectId type
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ChatRooms"
        "400":
          description: "projectIdが渡されていないか、不正です。"
        "404":
          description: "チャットルームが存在しません。"
        "500":
          description: "取得中に何らかのエラーが発生しました。"
  /messages:
    get:
      tags:
       - "V1"
      summary: "メッセージ一覧取得"
      description: "メッセージ一覧を取得します。"
      operationId: "getMessages"
      parameters:
        - name: "chatRoomId"
          in: "query"
          required: true
          schema:
            type: "string" # BEGIN: chatRoomId type
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MessagesGet"
        "400":
          description: "chatRoomIdが渡されていないか、不正です。"
        "404":
          description: "メッセージが存在しません。"
        "500":
          description: "取得中に何らかのエラーが発生しました。"
  /message:
    post:
      tags:
        - "V1"
      summary: "メッセージ投稿"
      description: "メッセージを投稿します。"
      operationId: "postMessage"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessagesPost"
      responses:
        "201":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Result"
        "400":
          description: "userIdまたはchatRoomIdまたはtextが渡されていないか、不正です。"
        "500":
          description: "登録中に何らかのエラーが発生しました。"
  /reviews/list:
    get:
      tags:
        - "V1"
      summary: "レビュー一覧取得"
      description: "レビュー一覧を取得します。"
      operationId: "getReviews"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Reviews"
                  
        "404":
          description: "レビューが存在しません。"
        "500":
          description: "取得中に何らかのエラーが発生しました。"
  /hello:
    get:
      tags:
        - "V1"
      summary: "テストAPI"
      description: "テスト用のAPIです"
      operationId: "hello"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hello"
        "400":
          description: "error 400"
        "404":
          description: "error 404"
        "500":
          description: "error 500"
          

